##### new bim with snp ID of CHR:POS #####
<R>
setwd("/home2/wjkim/project/LAM/final_analysis/0.data/")
map <- read.table("final_clean_withage.bim",head=F,stringsAsFactor=F)
map[,2] <- paste(map[,1],map[,4],sep=":")
write.table(map,"new_ID.bim",row.names=F,col.names=F,quote=F)

##### convert plink to vcf :  #####
## script /home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/make_input.sh
for chr in `seq 22`
do
  cd /home2/wjkim/project/LAM/final_analysis
  plink --bed 0.data/final_clean_withage.bed --bim 0.data/new_ID.bim --fam 0.data/final_clean_withage.fam --chr $chr --recode vcf --out 4.impute_web/whole/0.data/chr$chr

  ##### check and fix the REF allele  #####
  cd /home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/
  export BCFTOOLS_PLUGINS=/data/bin/plugins
  bcftools +fixref chr$chr.vcf -Ov -o matched_chr$chr.vcf -- -f /home2/wjkim/project/LAM/final_analysis/4.impute_web/0.data/human_g1k_v37.fasta -m flip
  bcftools norm --check-ref x -f /home2/wjkim/project/LAM/final_analysis/4.impute_web/0.data/human_g1k_v37.fasta matched_chr$chr.vcf -Ov -o new_matched_chr$chr.vcf
  bgzip -c new_matched_chr$chr.vcf > 1.input/input_chr$chr.vcf.gz
  rm chr$chr*
  rm matched_chr$chr.vcf
  rm new_*
done

## Run script
cd /home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/
sh make_input.sh

##### Association analysis #####
## QC
<R>
doQC <- function(i){
  setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/2.imputed")
  system(paste0("bcftools view -e 'INFO<0.3' -Oz -o chr",i,"/highINFO.vcf.gz chr",i,"/",i,".vcf.gz"))
  system(paste0("plink --vcf chr",i,"/highINFO.vcf.gz --maf 0.05 --geno 0.05 --hwe 0.00001 --out chr",i,"/clean_snp_chr",i,"_highINFO --make-bed"))
  system(paste0("plink --bfile chr",i,"/clean_snp_chr",i,"_highINFO --mind 0.05 --out chr",i,"/final_clean_chr",i,"_highINFO --make-bed"))
}
library(parallel)
a <- mclapply(1:22,doQC,mc.cores=11)


doQC.1 <- function(i){
  setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/2.imputed")
  system(paste0("awk '{print $1,$4}' OFS='\t' chr",i,"/final_clean_chr",i,".bim > chr",i,"/SNPs.list"))
  system(paste0("bcftools view -R chr",i,"/SNPs.list -Oz -o chr",i,"/final_clean_chr",i,".vcf.gz chr",i,"/",i,".vcf.gz"))

}




getQC <- function(i){
  setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/2.imputed")
  N.total <- system(paste0("grep loaded chr",i,"/clean_snp_chr",i,".log"),intern=T)[1]
  n.total <- as.numeric(strsplit(N.total," ")[[1]][1])
  
  N.geno <- system(paste0("grep missing chr",i,"/clean_snp_chr",i,".log"),intern=T)
  n.geno <- as.numeric(strsplit(N.geno," ")[[1]][1])
  
  N.hwe <- system(paste0("grep Hardy chr",i,"/clean_snp_chr",i,".log"),intern=T)
  n.hwe <- as.numeric(strsplit(N.hwe," ")[[1]][2])

  N.maf  <- system(paste0("grep minor chr",i,"/clean_snp_chr",i,".log"),intern=T)
  n.maf <- as.numeric(strsplit(N.maf," ")[[1]][1])
  
  N.final  <- system(paste0("grep pass chr",i,"/clean_snp_chr",i,".log"),intern=T)
  n.final <- as.numeric(strsplit(N.final," ")[[1]][1])
  
  res <- data.frame(chr=i,n.total,n.geno,n.hwe,n.maf,n.final)
  return(res)
}

res.I <- lapply(1:22,getQC)
res.II <- do.call(rbind,res.I)
res.III <- colSums(res.II)
write.table(res.III,"Imputed_QC.txt",row.names=F,quote=F)

total SNPs : 39131578
5427338



fambim <- function(i){
  setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/2.imputed")
  impute.fam <- read.table(paste0("chr",i,"/final_clean_chr",i,".fam"),head=F,stringsAsFactor=F)
  fam <- read.table("/home2/wjkim/project/LAM/final_analysis/0.data/final_clean_withage.fam",head=F,stringsAsFactor=F)
  new.fam <- fam[match(impute.fam[,1],fam[,1]),]
  write.table(new.fam,paste0("chr",i,"/final_clean_chr",i,".fam"),row.names=F,col.names=F,quote=F)

  bim <- read.table(paste0("chr",i,"/final_clean_chr",i,".bim"),head=F,stringsAsFactor=F)
  bim$V2[bim$V2=='.'] <- paste0(i,':',bim$V4[bim$V2=='.'])
  write.table(bim,paste0("chr",i,"/final_clean_chr",i,".bim"),row.names=F,col.names=F,quote=F)
}
a <- mclapply(1:22,fambim,mc.cores=22)

getraw <- function(i){
  setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/0.data/2.imputed")
  #system(paste0("plink --bfile chr",i,"/final_clean_chr",i," --recodeA --out chr",i,"/final_clean_chr",i))
  system(paste0("plink --bfile chr",i,"/final_clean_chr",i," --freq --out chr",i,"/final_clean_chr",i))
}  
a <- mclapply(1:22,getraw,mc.cores=22)


################# conditional logistic regression
library(survival)
library(parallel)

do.clogit <- function(i){
	setwd("/home2/wjkim/project/LAM/final_analysis/")
	raw <- read.table(paste0("4.impute_web/whole/0.data/2.imputed/chr",i,"/final_clean_chr",i,".raw"),head=T,stringsAsFactor=F)
	phe <- read.table("3.clogit/npc/phenofile_withage_2PCs.txt",head=T)
	maf <- read.table(paste0("4.impute_web/whole/0.data/2.imputed/chr",i,"/final_clean_chr",i,".frq"),head=T,stringsAsFactor=F)
	bim <- read.table(paste0("4.impute_web/whole/0.data/2.imputed/chr",i,"/final_clean_chr",i,".bim"),head=F,stringsAsFactor=F)

	rm.list <- read.table("3.clogit/1.revision/0.data/outliers.txt",head=F,stringsAsFactor=F)
	phe$pair_age[which(phe$pair_age%in%phe[phe$IID%in%rm.list$V2,'pair_age'])] <- NA

	n.snp <- ncol(raw)-6
	name.snp <- colnames(raw)[-c(1:6)]
	name.snp <- gsub("_[ATGC]","",name.snp)

	pair.data <- phe[which(!is.na(phe$pair_age)),]
	pair.raw <- raw[which(!is.na(phe$pair_age)),]

	con.logit <- function(ii){
		if(ii%%1000==0) print(paste0("Chromosome ",i,": ",ii,"th SNP of ",n.snp," SNPs"))
		snp <- pair.raw[,6+ii]
		dat <- cbind(pair.data,snp)
		fit.lam <- clogit(as.formula(paste0("pheno01 ~ snp + ",paste0('PC',1:10,collapse=' + ')," + strata(pair)")), method="exact", data=dat)
		res.coef <- summary(fit.lam)$coef
		res <- c(i,name.snp[ii],res.coef[1,])
		return(res)
	}
	outI <- mclapply(1:n.snp,con.logit,mc.cores=20)
	outII <- do.call(rbind,outI)
	colnames(outII) <- c("chr","snp","beta","OR","se_OR","z","p_value")
	outIII <- data.frame(maf[,1:4],Position=bim[,4],MAF=maf[,5],outII[,-c(1,2)])
	write.table(outIII,paste0("4.impute_web/whole/2.clogit/clogit_method2_chr",i,"_withPCs.txt"),row.names=F,quote=F)
}

aa <- lapply(1:22,do.clogit)

#### result summary
get_plotdat <- function(i){
	setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/2.clogit/")
	a <- read.table(paste0("clogit_method2_chr",i,"_withPCs.txt"),head=T,stringsAsFactor=F)
	return(a)
}

aa <- lapply(1:22,get_plotdat)
bb <- do.call(rbind,aa)
plotdata <- bb[,c('CHR','SNP','p_value')]
colnames(plotdata) <- c('CHR','GENE','p.val')
setwd("/home2/wjkim/project/LAM/final_analysis/4.impute_web/whole/2.clogit/")
write.table(plotdata,'plotdata_clogit_190131_method2_withPCs.txt',row.names=F,quote=F)
system("Rscript Output_plot.r plotdata_clogit_190131_method2_withPCs.txt clogit_impute_190131_method2_withPCs")

sigs <- bb[bb$p_value < 5e-8,]
write.csv(sigs,'sigs_190131_method2_withPCs.csv',row.names=F,quote=F)

library(GenABEL)
estlambda(plotdata[,3])
# lambda : 1.025166


